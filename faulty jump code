  // variables
    public float jumpForce = 2.0f;
    public float fallForce = 1.0f;
    Rigidbody rb;
    private int jumpsLeft = 2;
    private int jumpsMade = 0;
    private bool isJumping;

    public void onJump(InputValue value){
        if (jumpsLeft > 0 && !isJumping){
            // check jump count and grounded
            // allow jump if true
            rb.AddForce(Vector3.up * jumpForce, ForceMode.Impulse);

            //update jump state and count
            isJumping = true;
            jumpsLeft--;
            jumpsMade++;
        }
        else if (jumpsMade < 2){
            // if no jumps left but less than 2
            // restart vertical speed and apply force again
            rb.velocity = new Vector3(rb.velocity.x, 0, rb.velocity.z);
            rb.AddForce(Vector3.up * jumpForce, ForceMode.Impulse);

            // increase jump count
            jumpsMade++;
        }
    }

    void OnCollisionEnter(Collision collision){
        // reset jump state and count upon grounded
        isJumping = false;
        jumpsLeft = 2;
        jumpsMade = 0;
    }

    void FixedUpdate(){
        // apply force to simulate gravity
        rb.AddForce(Vector3.down * fallForce);
    }
